openapi: 3.0.2
info:
  title: Poet Assistant REST Api
  version: ''
  description: English-language tools for writing poetry
paths:
  /rhymes/:
    get:
      operationId: listRhymes
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: word
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Rhymes'
          description: ''
      tags:
      - rhymes
  /thesaurus/:
    get:
      operationId: listThesaurusEntrys
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: word
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ThesaurusEntry'
          description: ''
      tags:
      - thesaurus
  /definitions/:
    get:
      operationId: listDictionarys
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: word
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Dictionary'
          description: ''
      tags:
      - definitions
  /wotd/:
    get:
      operationId: listWotds
      description: Return the word(s) of the day.
      parameters:
      - name: size
        required: false
        in: query
        description: The number of words of the day
        schema:
          type: int
      - name: before
        required: false
        in: query
        description: Return words of the day prior to and including this date
        schema:
          type: date
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wotd'
          description: ''
      tags:
      - wotd
components:
  schemas:
    Rhymes:
      type: object
      properties:
        syllables_type:
          type: string
          readOnly: true
        syllables:
          type: string
          readOnly: true
        word:
          type: string
          maxLength: 34
      required:
      - word
    ThesaurusEntry:
      type: object
      properties:
        part_of_speech:
          enum:
          - noun
          - verb
          - adjective
          - adverb
          - unknown
          type: string
          readOnly: true
        synonyms:
          type: array
          items:
            type: string
        antonyms:
          type: array
          items:
            type: string
      required:
      - synonyms
      - antonyms
    Dictionary:
      type: object
      properties:
        part_of_speech:
          enum:
          - noun
          - verb
          - adjective
          - adverb
          - unknown
          type: string
          readOnly: true
        definition:
          type: string
      required:
      - definition
    Wotd:
      type: object
      properties:
        date:
          type: string
          format: date
        word:
          type: string
      required:
      - date
      - word
